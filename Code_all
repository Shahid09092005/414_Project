#Install kaggle
!pip install -q kaggle

from google.colab import files
files.upload()

#delete the existing root directory
!rm -rf /root/.kaggle
# Create a directory named "kaggle"
!mkdir ~/.kaggle
#Copy the kaggle.json to created folder
! cp kaggle.json ~/.kaggle/
#permisson for the json to act
! chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d shahidmansuri/dataset    #dataset
!unzip /content/dataset.zip

from IPython.display import clear_output
import os
import sys
import random
import warnings
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from tqdm import tqdm
from itertools import chain
from skimage.io import imread, imshow, imread_collection, concatenate_images
from skimage.transform import resize
from skimage.morphology import label
from keras.models import Model, load_model
from keras.layers import Input
from tensorflow.keras.layers import Dropout, Lambda
from tensorflow.keras.layers import Conv2D, Conv2DTranspose
from tensorflow.keras.layers import MaxPooling2D
from tensorflow.keras.layers import concatenate
from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint
import tensorflow.keras.backend as K

import tensorflow as tf
warnings.filterwarnings('ignore', category=UserWarning, module='skimage')


IMG_WIDTH = 128
IMG_HEIGHT = 128
IMG_CHANNELS = 3
TRAIN_PATH = '/content/train'
TEST_PATH = '/content/test'

train_ids = os.listdir(TRAIN_PATH)
test_ids = os.listdir(TEST_PATH)
print("Total training images: ",len(train_ids))
print("Total test images: ",len(test_ids))

# Get and resize train images and masks

X_train = np.zeros((len(train_ids), IMG_HEIGHT, IMG_WIDTH, IMG_CHANNELS), dtype=np.uint8)
# This created a array shape of (669,128,128,3), We will apped training images on this array.
Y_train = np.zeros((len(train_ids), IMG_HEIGHT, IMG_WIDTH, 1), dtype=bool)
# This created a array shape of (669,128,128,1), We will apped test images on this array.
print('Getting and resizing train images and masks ... ')
sys.stdout.flush()

for n, id_ in tqdm(enumerate(train_ids), total=len(train_ids)):
    path = os.path.join(TRAIN_PATH, id_)
    img = imread(os.path.join(path, 'images', id_ + '.png'))[:,:,:IMG_CHANNELS]
    img = resize(img, (IMG_HEIGHT, IMG_WIDTH), mode='constant', preserve_range=True)
    X_train[n] = img

    mask = np.zeros((IMG_HEIGHT, IMG_WIDTH, 1), dtype=bool)
    for mask_file in os.listdir(os.path.join(path, 'masks')):
        mask_ = imread(os.path.join(path, 'masks', mask_file))
        mask_ = np.expand_dims(resize(mask_, (IMG_HEIGHT, IMG_WIDTH), mode='constant', preserve_range=True), axis=-1)
        mask = np.maximum(mask, mask_)
    Y_train[n] = mask

ix = random.randint(0, len(train_ids))
print("Training image")
imshow(X_train[ix])
plt.show()
print("Mask of the image")
imshow(np.squeeze(Y_train[ix]))
plt.show()

